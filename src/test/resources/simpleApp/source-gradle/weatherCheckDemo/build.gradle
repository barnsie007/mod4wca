/*
 * This file was generated by the Gradle 'init' task.
 */

// buildscript {
//     repositories {
//         mavenCentral()
//     }
//     dependencies {
//         classpath 'io.openliberty.tools:liberty-gradle-plugin:3.7'
//     }
// }

// plugins {} is newer method of applying plugins. apply is older but more flexible
// plugins {
//     id 'war'
//     id 'liberty'
// }

// apply plugin: 'liberty'
apply plugin: 'war'

repositories {
    maven { url = "https://repo.maven.apache.org/maven2" }
}

dependencies {
    implementation group: 'commons-logging', name: 'commons-logging', version: '1.1.3'
    implementation group: 'commons-io', name: 'commons-io', version: '2.7'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation group: 'org.apache.httpcomponents.core5', name: 'httpcore5', version: '5.2.4'
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.13'
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.5'
    implementation group: 'org.json', name: 'json', version: '20231013'
    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
}

group = 'com.ibm.ta'
version = '1.0'
description = 'modresorts'
java.sourceCompatibility = JavaVersion.VERSION_1_8
project.webAppDirName = 'WebContent'


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

war {
    webAppDirectory = file('WebContent')
    archiveFileName = 'modresorts-1.0.war'
}

// liberty {
//      server {
//         serverXmlFile = file('src/main/liberty/config/server.xml')
//         looseApplication=true
//     }
// }
